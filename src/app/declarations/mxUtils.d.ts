declare class mxUtils {
    static addStylename(style, stylename);
    static addTransparentBackgroundFilter(node);
    static alert(message);
    static animateChanges(graph, changes);
    static arcToCurves(x0, y0, r1, r2, angle, largeArcFlag, sweepFlag, x, y);
    static bind(scope, funct);
    static br(parent, count);
    static button(label, funct, doc);
    static cascadeOpacity(graph, cell, opacity);
    static clearSelection();
    static clone(obj, transients, shallow);
    static closeResource: string;
    static confirm(message);
    static contains(bounds, x, y);
    static convertPoint(container, x, y);
    static createImage(src);
    static createXmlDocument();
    static equalEntries(a, b);
    static equalPoints(a, b);
    static error(message, width, close, icon);
    static errorImage: string;
    static errorResource: string;
    static eval(expr);
    static extend(ctor, superCtor);
    static extractTextWithWhitespace(elems);
    static fadeOut(node, from, remove, step, delay, isEnabled);
    static findNearestSegment(state, x, y);
    static findNode(node, attr, value);
    static fit(node);
    static forEach(array, fn);
    static get(url, onload, onerror, binary, timeout, ontimeout);
    static getAlignmentAsPoint(align, valign);
    static getAll(urls, onload, onerror);
    static getBoundingBox(rect, rotation, cx);
    static getChildNodes(node, nodeType);
    static getColor(array, key, defaultValue);
    static getCurrentStyle(element);
    static getDirectedBounds(rect, m, style, flipH, flipV);
    static getDocumentScrollOrigin(doc);
    static getFunctionName(f);
    static getInnerHtml(node);
    static getNumber(array, key, defaultValue);
    static getOffset(container, scrollOffset);
    static getOuterHtml(node);
    static getPerimeterPoint(pts, center, point);
    static getPortConstraints(terminal, edge, source, defaultValue);
    static getPrettyXml(node, tab, indent);
    static getRotatedPoint(pt, cos, sin, c);
    static getScaleForPageCount(pageCount, graph, pageFormat, border);
    static getScrollOrigin(node, includeAncestors, includeDocument);
    static getSizeForString(text, fontSize, fontFamily, textWidth);
    static getStylename(style);
    static getStylenames(style);
    static getTextContent(node);
    static getValue(array, key, defaultValue);
    static getViewXml(graph, scale, cells, x0, y0);
    static getXml(node, linefeed);
    static hasScrollbars(node);
    static htmlEntities(s, newline);
    static importNode(doc, node, allChildren);
    static indexOf(array, obj);
    static indexOfStylename(style, stylename);
    static intersection(x0, y0, x1, y1, x2, y2, x3, y3);
    static intersects(a, b);
    static intersectsHotspot(state, x, y, hotspot, min, max);
    static isAncestorNode(ancestor, child);
    static isInteger(n);
    static isNaN(value);
    static isNode(value, nodeName, attributeName, attributeValue);
    static isNumeric(n);
    static isVml(node);
    static link(parent, text, funct, pad);
    static linkAction(parent, text, editor, action, pad);
    static linkInvoke(parent, text, editor, functName, arg, pad);
    static load(url);
    static loadInto(url, doc, onload);
    static ltrim(str, chars);
    static makeDraggable(element, graphF, funct, dragElement, dx, dy, autoscroll, scalePreview, highlightDropTargets, getDropTarget);
    static mod(n, m);
    static para(parent, text);
    static parseCssNumber(value);
    static parseXml(xml);
    static popup(content, isInternalWindow);
    static post(url, params, onload, onerror);
    static printScreen(graph);
    static prompt(message, defaultValue);
    static ptLineDist(x1, y1, x2, y2, px, py);
    static ptSegDistSq(x1, y1, x2, y2, px, py);
    static rectangleIntersectsSegment(bounds, p1, p2);
    static relativeCcw(x1, y1, x2, y2, px, py);
    static remove(obj, array);
    static removeAllStylenames(style);
    static removeCursors(element);
    static removeDuplicates(arr);
    static removeStylename(style, stylename);
    static removeWhitespace(node, before);
    static replaceTrailingNewlines(str, pattern);
    static reversePortConstraints(constraint);
    static rtrim(str, chars);
    static setCellStyleFlags(model, cells, key, flag, value);
    static setCellStyles(model, cells, key, value);
    static setOpacity(node, value);
    static setPrefixedStyle(style, name, value);
    static setStyle(style, key, value);
    static setStyleFlag(style, key, flag, value);
    static setTextContent(node, text);
    static show(graph, doc, x0, y0, w, h);
    static sortCells(cells, ascending);
    static submit(url, params, doc, target);
    static toDegree(rad);
    static toRadians(deg);
    static toString(obj);
    static trim(str, chars);
    static write(parent, text);
    static writeln(parent, text);
}